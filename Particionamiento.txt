http://gpd.sip.ucm.es/rafa/docencia/nosql/Sharding.html

start /b mongod --port 26001 --configsvr --replSet replicaTorneoShardServer --dbpath /dataC1
start /b mongod --port 26002 --configsvr --replSet replicaTorneoShardServer --dbpath /dataC2
start /b mongod --port 26003 --configsvr --replSet replicaTorneoShardServer --dbpath /dataC3
start /b mongod --shardsvr --port 27006 --replSet replicaTorneoP1 --dbpath /dataP11 --oplogSize 115
start /b mongod --shardsvr --port 27007 --replSet replicaTorneoP1 --dbpath /dataP12 --oplogSize 115
start /b mongod --shardsvr --port 27008 --replSet replicaTorneoP1 --dbpath /dataP13 --oplogSize 115
start /b mongod --shardsvr --port 27013 --replSet replicaTorneoP1 --dbpath /dataP14 --oplogSize 115
start /b mongod --shardsvr --port 27009 --replSet replicaTorneoP2 --dbpath /dataP21 --oplogSize 115
start /b mongod --shardsvr --port 27010 --replSet replicaTorneoP2 --dbpath /dataP22 --oplogSize 115
start /b mongod --shardsvr --port 27011 --replSet replicaTorneoP2 --dbpath /dataP23 --oplogSize 115
start /b mongod --shardsvr --port 27012 --replSet replicaTorneoP2 --dbpath /dataP24 --oplogSize 115
start /b mongos --configdb configrs/127.0.0.1:26001,127.0.0.1:26002,127.0.0.1:26003
start /b mongos --configdb configrs/127.0.0.1:26001,127.0.0.1:26002,127.0.0.1:26003 --port 26601

sh.status()
 rs.add( {  host:"127.0.0.1:27013" } )
 rs.add( {  host:"127.0.0.1:27012" } )
Configuración

Teniendo en cuenta que ya las carpetas correspondiente a cada servidor están creadas iniciamos cada uno de ellos 

Inicio server de configuración (Servidores Administrativos)
start /b mongod --port 26001 --configsvr --replSet replicaTorneoShardServer --dbpath /dataC1
start /b mongod --port 26002 --configsvr --replSet replicaTorneoShardServer --dbpath /dataC2
start /b mongod --port 26003 --configsvr --replSet replicaTorneoShardServer --dbpath /dataC3
mongo -port 26001
Creamos La Replica (servidores administrativos)

conf = {_id: "replicaTorneoShardServer",
           members: [ {_id:0, host:"127.0.0.1:26001" },
                      {_id:1, host:"127.0.0.1:26002" },
                      {_id:2, host:"127.0.0.1:26003" } ] }
rs.initiate(conf)

Inicio server de base de datos para las particiones (servidores operativos)

start /b mongod --shardsvr --port 27006 --replSet replicaTorneoP1 --dbpath /dataP11 --oplogSize 115
start /b mongod --shardsvr --port 27007 --replSet replicaTorneoP1 --dbpath /dataP12 --oplogSize 115
start /b mongod --shardsvr --port 27008 --replSet replicaTorneoP1 --dbpath /dataP13 --oplogSize 115
start /b mongod --shardsvr --port 27005 --replSet replicaTorneoP1 --dbpath /dataP14 --oplogSize 115
mongo -port 27006
Creamos La Replica (Servidores Operativos)

config = {_id: "replicaTorneoP1",
           members: [ 
           {_id:0, host:"127.0.0.1:27006" },
           {_id:1, host:"127.0.0.1:27007" },
           {_id:2, host:"127.0.0.1:27008",arbiterOnly:true }] }
rs.initiate(config)
rs.addArb("127.0.0.1:27008")


start /b mongod --shardsvr --port 27009 --replSet replicaTorneoP2 --dbpath /dataP21 --oplogSize 115
start /b mongod --shardsvr --port 27010 --replSet replicaTorneoP2 --dbpath /dataP22 --oplogSize 115
start /b mongod --shardsvr --port 27011 --replSet replicaTorneoP2 --dbpath /dataP23 --oplogSize 115
start /b mongod --shardsvr --port 270112 --replSet replicaTorneoP2 --dbpath /dataP24 --oplogSize 115

mongo -port 27009

Creamos La Replica (Servidores Operativos)

config = {_id: "replicaTorneoP2",
           members: [ 
           {_id:0, host:"127.0.0.1:27009" },
           {_id:1, host:"127.0.0.1:27010",arbiterOnly:true },
           {_id:2, host:"127.0.0.1:27011"} ] }
rs.initiate(config)
rs.addArb("127.0.0.1:27010")

Creación de los procesos mongos
start /b mongos --configdb configrs/127.0.0.1:26001,127.0.0.1:26002,127.0.0.1:26003
start /b mongos --configdb configrs/127.0.0.1:26001,127.0.0.1:26002,127.0.0.1:26003 --port 26601


Iniciamos las particiones. 
mongos>
sh.addShard("replicaTorneoP1/127.0.0.1:27007,127.0.0.1:27006")
sh.addShard("replicaTorneoP2/127.0.0.1:27009,127.0.0.1:27011")
sh.status()

Partimos Las Colecciones
Habilitamos Sharding
use TorneoDeportivo2
sh.enableSharding("TorneoDeportivo2")
sh.status()

Agregamos Parición A Las Colecciones
use TorneoDeportivo2
db
db.createCollection("Deportistas")
sh.shardCollection("TorneoDeportivo2.Deportistas",{"documento":"hashed"})

sh.shardCollection("TorneoDeportivo2.Deportistas",{"documento":1,"nombre":1})


Ahora podemos insertar valores y comprobar el número de chunks:

db.Deportistas.getShardDistribution()

